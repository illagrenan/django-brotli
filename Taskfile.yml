# https://taskfile.dev

version: '3'

env:
  PYTHONUNBUFFERED: 1
  PYTHONDONTWRITEBYTECODE: 1

vars:
  SOURCES: ./django_brotli/ ./tests/

tasks:
  test:
    aliases:
      - tests
      - pytest
      - pytests
    desc: Run pytests
    cmds:
      - poetry run pytest
    silent: false

  coverage:
    desc: Run coverage
    cmds:
      - pytest --cov=./django_brotli/ --cov-branch --cov-report=xml --cov-report=term-missing ./tests/
    silent: false

  clean:
    desc: Clean build files
    cmds:
      - >
        {{if eq OS "windows"}}
        powershell -Command Remove-Item *.egg-info, dist, .tox, coverage.xml, .coverage, .mypy_cache, .pytest_cache -Recurse -Force -ErrorAction SilentlyContinue
        {{else}}
        rm -rf *egg-info dist .tox coverage.xml .coverage .mypy_cache .pytest_cache
        {{end}}
    silent: false

  mypy:
    desc: Check setup
    cmds:
      - mypy {{.SOURCES}}
    silent: false

  ruff:
    desc: Run ruff
    cmds:
      - ruff check {{.SOURCES}}
    silent: false

  lint:
    desc: Check setup
    cmds:
      - task: mypy
      - task: ruff
      - task: isort_check
      - task: format_check
    silent: false

  isort:
    desc: Optimize imports
    cmds:
      - ruff check --select I,F401 {{.SOURCES}}
    silent: false

  isort_check:
    desc: Check isort
    cmds:
      - ruff check --select I,F401 --fix {{.SOURCES}}
    silent: false

  ruff_format:
    aliases:
      - fmt
    desc: Format using ruff
    cmds:
      - ruff format {{.SOURCES}}
    silent: false

  format_check:
    desc: Check ruff formatting
    cmds:
      - ruff format --check {{.SOURCES}}
    silent: false

  format:
    desc: Check setup
    cmds:
      - task: isort
      - task: ruff
    silent: false

  doc:
    desc: Check distribution
    cmds:
      - mkdocs build
    silent: false

  build:
    desc: Build the package
    cmds:
      - poetry build
    silent: false

  build_check:
    desc: Check distribution
    cmds:
      - twine check dist/*
    silent: false

  test_install:
    desc: Try to install local dist
    vars:
      PROJECT_NAME: django-brotli
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1
    deps: [ build ]
    cmds:
      - pip uninstall {{.PROJECT_NAME}} --yes
      - pip install --no-cache-dir --no-index --find-links=file:./dist {{.PROJECT_NAME}}
      - pip uninstall {{.PROJECT_NAME}} --yes
    silent: false
